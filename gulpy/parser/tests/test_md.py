import numpy as np
import pandas as pd
import unittest as ut
from pymatgen.core import Structure

from gulpy.parser.md import MolecularDynamicsParser


class TestParser(ut.TestCase):
    def setUp(self):
        self.parser = MolecularDynamicsParser.from_file(
            "files/md/md.out", "files/md/md.trg"
        )

    def test_frames(self):
        frames = self.parser.get_frames()
        self.assertEqual(len(frames), 5)

        expected_frame_1 = np.array(
            [
                [-2.14134361e00, 3.65542237e00, 2.62703519e00],
                [4.16807401e00, 7.12087602e00, 2.63591706e00],
                [4.15239803e00, 3.33959824e-02, 2.65878109e00],
                [-4.16558341e00, 7.26472181e00, 1.81040239e-02],
                [2.07897103e00, 3.66167276e00, -5.80916547e-02],
                [8.26118794e00, 4.76837026e-02, 1.06081561e-03],
                [8.31024323e00, 1.53498536e-02, 2.59592568e00],
                [2.08079830e00, 3.75152594e00, 2.57093512e00],
                [-4.11086835e00, 7.14144009e00, 2.64980289e00],
                [4.24202325e00, 7.05976541e-02, 4.19166531e-02],
                [4.18094478e00, 7.19037567e00, 2.08055109e-02],
                [-1.99234948e00, 3.66883344e00, 3.58747956e-02],
                [-6.79354190e-02, 4.41529043e00, 3.92295858e00],
                [2.38509117e00, 8.55612379e00, 3.91349177e00],
                [-2.39297207e00, 8.53784744e00, 3.92724935e00],
                [6.22077428e00, 6.41751377e00, 1.34407090e00],
                [3.85448228e00, 2.25963832e00, 1.33073992e00],
                [8.63011708e00, 2.25940835e00, 1.26172065e00],
                [-2.13615711e00, 5.93415571e00, 3.99786554e00],
                [2.08071001e00, 5.95413717e00, 3.97079326e00],
                [-3.44892126e-03, 9.66876205e00, 3.88204473e00],
                [8.39835022e00, 4.87550643e00, 1.25177923e00],
                [4.09244292e00, 4.85510735e00, 1.26419192e00],
                [6.27580998e00, 1.20822888e00, 1.30499652e00],
                [-1.57969864e00, 4.32868397e00, 3.99059168e00],
                [3.15777920e00, 7.22728068e00, 3.95940156e00],
                [-1.65728148e00, 9.94313041e00, 3.89099452e00],
                [7.82640417e00, 6.43911166e00, 1.30018540e00],
                [3.00796362e00, 3.62842570e00, 1.25020453e00],
                [7.87942494e00, 9.18162362e-01, 1.31574461e00],
                [1.61660142e00, 9.96238304e00, 3.88812892e00],
                [1.58675720e00, 4.43053821e00, 3.92743997e00],
                [-3.16949114e00, 7.16363050e00, 3.97958869e00],
                [4.63001768e00, 8.95620507e-01, 1.35029287e00],
                [4.69136298e00, 6.41868168e00, 1.36464777e00],
                [9.45000852e00, 3.59723089e00, 1.28650028e00],
                [-2.12859518e00, 3.69643734e00, 7.96328311e00],
                [4.22180821e00, 7.13520043e00, 7.86594739e00],
                [4.28493774e00, 2.51609435e-02, 7.94592593e00],
                [-4.21906691e00, 7.11697349e00, 5.21044334e00],
                [2.12134404e00, 3.59809547e00, 5.19242136e00],
                [8.30197467e00, -3.41985308e-02, 5.22719601e00],
                [8.24389612e00, -2.47034320e-02, 7.91296793e00],
                [2.02376887e00, 3.59088691e00, 7.83445803e00],
                [-4.15757330e00, 7.10880897e00, 7.80323101e00],
                [4.22600124e00, 9.52816522e-03, 5.29269982e00],
                [4.11935572e00, 7.17130621e00, 5.24837392e00],
                [-2.08312753e00, 3.59162539e00, 5.31352844e00],
                [1.28123956e-02, 4.53831018e00, 9.19271654e00],
                [2.42261522e00, 8.58871361e00, 9.22938107e00],
                [-2.40545603e00, 8.62056217e00, 9.21114750e00],
                [6.22029896e00, 6.22480122e00, 6.52782207e00],
                [3.82948767e00, 2.20140095e00, 6.50919311e00],
                [8.63594761e00, 2.20428510e00, 6.66506598e00],
                [-2.10613883e00, 6.03366722e00, 9.25514576e00],
                [2.18879299e00, 5.94276449e00, 9.17735831e00],
                [-3.51010354e-02, 9.62910742e00, 9.30953936e00],
                [8.37071076e00, 4.83138479e00, 6.53680873e00],
                [4.03765990e00, 4.80988819e00, 6.57519565e00],
                [6.25913413e00, 1.21861062e00, 6.49428499e00],
                [-1.53254635e00, 4.51123113e00, 9.23782601e00],
                [3.25025570e00, 7.22223695e00, 9.18086905e00],
                [-1.61175855e00, 1.00080476e01, 9.24306995e00],
                [7.77572141e00, 6.35405322e00, 6.51211078e00],
                [3.00318305e00, 3.54210184e00, 6.53862675e00],
                [7.87636245e00, 8.60436722e-01, 6.60691625e00],
                [1.64815042e00, 9.98188146e00, 9.27867966e00],
                [1.57666319e00, 4.41400341e00, 9.11312391e00],
                [-3.17646510e00, 7.25226832e00, 9.16771151e00],
                [4.67730062e00, 8.65101298e-01, 6.54384042e00],
                [4.65952215e00, 6.29435827e00, 6.56152809e00],
                [9.46532970e00, 3.58820500e00, 6.61026825e00],
                [-2.16666687e00, 3.70205595e00, 2.62451190e00],
                [4.14311592e00, 7.07405461e00, 2.63345542e00],
                [4.22031821e00, 3.21800381e-02, 2.65839792e00],
                [-4.13369466e00, 7.20175966e00, 1.73994062e-02],
                [2.10958914e00, 3.71406408e00, -5.80754247e-02],
                [8.20514685e00, 4.60916400e-02, -7.73413822e-05],
                [8.24729254e00, 1.30953586e-02, 2.59718385e00],
                [2.11121258e00, 3.79135014e00, 2.57703529e00],
                [-4.08557838e00, 7.09605039e00, 2.64841027e00],
                [4.29879865e00, 6.53530288e-02, 4.55251028e-02],
                [4.15357451e00, 7.13333316e00, 1.81311303e-02],
                [-2.03501251e00, 3.72539155e00, 3.31748903e-02],
                [-6.81312954e-02, 4.43083164e00, 3.92872763e00],
                [2.37588394e00, 8.55006233e00, 3.91549016e00],
                [-2.38590131e00, 8.53526498e00, 3.93218346e00],
                [6.21930947e00, 6.40970757e00, 1.34277060e00],
                [3.86769370e00, 2.26451032e00, 1.32525062e00],
                [8.62167769e00, 2.26474401e00, 1.26466118e00],
                [-2.18281612e00, 5.90799797e00, 3.99206090e00],
                [2.13069691e00, 5.92667211e00, 3.96557278e00],
                [-4.65159806e-03, 9.72145706e00, 3.88659668e00],
                [8.43932662e00, 4.90166688e00, 1.26143898e00],
                [4.04688427e00, 4.87899232e00, 1.27118784e00],
                [6.27713527e00, 1.15315595e00, 1.30238834e00],
                [-2.15121709e00, 3.74647167e00, 7.95703169e00],
                [4.18318164e00, 7.07516494e00, 7.86488950e00],
                [4.33240343e00, 2.39479436e-02, 7.94533849e00],
                [-4.18401887e00, 7.06009437e00, 5.21436432e00],
                [2.14799867e00, 3.66057822e00, 5.19928793e00],
                [8.24237493e00, -3.30369879e-02, 5.22532139e00],
                [8.18976130e00, -2.24400431e-02, 7.91464656e00],
                [2.06521453e00, 3.65361261e00, 7.83584657e00],
                [-4.13309361e00, 7.06580176e00, 7.80408564e00],
                [4.28609733e00, 1.56545926e-02, 5.28815451e00],
                [4.08774034e00, 7.11667113e00, 5.24790349e00],
                [-2.11986706e00, 3.64898687e00, 5.31069934e00],
                [1.17639586e-02, 4.54275242e00, 9.19062532e00],
                [2.41146376e00, 8.58274833e00, 9.23116453e00],
                [-2.39381893e00, 8.61068315e00, 9.21236562e00],
                [6.21869569e00, 6.22200733e00, 6.52781692e00],
                [3.83886775e00, 2.20729152e00, 6.50754106e00],
                [8.62036094e00, 2.21316354e00, 6.66144842e00],
                [-2.15387177e00, 6.00380414e00, 9.24557878e00],
                [2.22641904e00, 5.92404846e00, 9.17643934e00],
                [-3.64921081e-02, 9.69373228e00, 9.30064426e00],
                [8.41903370e00, 4.86020378e00, 6.54447756e00],
                [4.00393071e00, 4.83119424e00, 6.56901588e00],
                [6.25905591e00, 1.15598772e00, 6.50429651e00],
            ]
        )

        self.assertIsNone(np.testing.assert_almost_equal(frames[0], expected_frame_1))

    def test_step_props(self):
        steps = self.parser.get_step_properties()
        self.assertEqual(len(steps), 5)
        self.assertIsInstance(steps, pd.DataFrame)

        expected = [0.600000000000007E-01, 3.80326930055334, -3079.93053082179, 414.413730559957]

        for x, y in zip(expected, steps.iloc[0, :].values):
            self.assertAlmostEqual(x, y)




if __name__ == "__main__":
    ut.main()
